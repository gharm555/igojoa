<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring https://mybatis.org/schema/mybatis-spring.xsd">

	<!-- bean definitions here -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver" />
		<property name="jdbcUrl"
			value="jdbc:mysql://igojoa.c3gagc46czkf.ap-northeast-2.rds.amazonaws.com:3306/igojoa" />
		<property name="username" value="igojoa" />
		<property name="password" value="igojoa" />
	</bean>
	<bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
		<constructor-arg ref="hikariConfig" />
	</bean>
	<bean id="session"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds" />
		<property name="mapperLocations"
			value="classpath:mappers/**/*.xml" />
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>
	<mybatis:scan base-package="com.itwill.igojoa.repository" />
	<context:component-scan
		base-package="com.itwill.igojoa.service" />


	<!-- AWS 자격 증명 설정 -->
	<bean id="awsCredentials"
		class="com.amazonaws.auth.BasicAWSCredentials">
		<constructor-arg value="?" />
		<constructor-arg value="?" />
	</bean>

    <bean id="awsProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location" value="classpath:application-aws.properties" />
    </bean>
    <!-- AWS 자격 증명 설정 -->
    <bean id="awsCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
        <constructor-arg value="${awsProperties.accessKeyId}"/>
        <constructor-arg value="${awsProperties.secretAccessKey}"/>
    </bean>
    
    <!-- AWS S3 클라이언트 빌더 설정 (필요한 경우) -->
    <bean id="amazonS3" class="com.amazonaws.services.s3.AmazonS3ClientBuilder" factory-method="standard">
        <property name="region" value="ap-northeast-2"/>
        <property name="credentials" ref="awsCredentialsProvider"/>
    </bean>


	<!-- AWS S3 클라이언트 빌더 설정 (필요한 경우) -->
	<bean id="amazonS3"
		class="com.amazonaws.services.s3.AmazonS3ClientBuilder"
		factory-method="standard">
		<property name="region" value="ap-northeast-2" />
		<property name="credentials" ref="awsCredentialsProvider" />
	</bean>

	<bean id="awsCredentialsProvider"
		class="com.amazonaws.auth.AWSStaticCredentialsProvider">
		<constructor-arg ref="awsCredentials" />
	</bean>
</beans>