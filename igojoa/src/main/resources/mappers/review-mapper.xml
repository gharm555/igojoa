<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwill.igojoa.repository.ReviewDao">
	<insert id="insertReview">
		<bind name="placeName" value="placeName" />
		<bind name="userId" value="userId" />
		<bind name="review" value="review" />
		<bind name="parkingAvailable" value="parkingAvailable" />
		<bind name="view" value="view" />
		<bind name="nightView" value="nightView" />
		<bind name="freeEntry" value="freeEntry" />
		<bind name="userId" value="userId" />
		<bind name="easyTransport" value="easyTransport" />
		<bind name="iScore" value="iScore" />
		INSERT
		INTO
		reviews (placeName,
		userId,
		review,
		parkingAvailable,
		`view`,
		nightView,
		freeEntry,
		easyTransport,
		iScore)
		values('${ placeName }',
		'${
		userId }',
		'${ review }',
		${ parkingAvailable },
		${ view },
		${ nightView
		},
		${ freeEntry },
		${ easyTransport },
		${ iScore });
	</insert>

	<select id="selectPlaceReviews" parameterType="ReviewSelectDto"
		resultType="ReviewListDto">
		<bind name="placeName" value="placeName" />
		<bind name="userId" value="userId" />
		<bind name="orderBy" value="orderBy" />
		<bind name="startRowValue" value="startRowValue" />
		<bind name="rowCnt" value="rowCnt" />
		SELECT
		u.nickName ,
        r.review ,
        r.modifiedAt ,
        r.parkingAvailable ,
        r.`view` ,
        r.nightView ,
        r.freeEntry ,
        r.easyTransport ,
        r.iScore,
        COALESCE(rl.cntLike, 0) AS cntLike,
        COALESCE(myLike.myLike, 0) AS myLike,
        u.userProfileUrl
		FROM
		reviews r
		LEFT JOIN (
		SELECT
		rl.placeName ,
		rl.userId ,
		COUNT(*) AS cntLike
		FROM
		reviewLikes rl
		WHERE
		rl.placeName = '${ placeName }'
		GROUP BY
		rl.placeName ,
		rl.userId ) rl
		ON
		rl.placeName = r.placeName
		and rl.userId
		= r.userId
		LEFT JOIN (
		SELECT
		rl.userId ,
		rl.placeName ,
		rl.likeUserId ,
		COUNT(*) AS myLike
		FROM
		reviewLikes rl
		WHERE
		rl.placeName = '${ placeName }'
		AND rl.likeUserId =
		'${
		userId }'
		GROUP BY
		rl.placeName ,
		rl.userId ,
		rl.likeUserId
		) myLike
		ON
		myLike.placeName =
		r.placeName
		AND myLike.userId = r.userId
		LEFT JOIN
		users u
		ON
		u.userId = r.userId
		WHERE
		r.placeName = '${
		placeName }'
		<if test='orderBy.equals("modifiedAtDESC")'>
			ORDER BY
			modifiedAt
			DESC
		</if>
		<if test='orderBy.equals("modifiedAtASC")'>
			ORDER BY
			modifiedAt
			ASC
		</if>
		<if test='orderBy.equals("cntLikeDESC")'>
			ORDER BY
			cntLike
			DESC
		</if>
		<if test='orderBy.equals("cntLikeASC")'>
			ORDER BY
			cntLike
			ASC
		</if>
		LIMIT ${ startRowValue }, ${ rowCnt }
	</select>

</mapper>